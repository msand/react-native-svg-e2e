addons:
  artifacts: true

# Run in VM on Google Compute Engine, slower startup but runs faster (ignored on osx)
sudo: required

aliases:
  - &android
    components:
      - tools
      - platform-tools
      - build-tools-28.0.3
      - android-26
      - android-28
      - extra-google-google_play_services
      - extra-google-m2repository
      - extra-android-m2repository
      - sys-img-x86_64-android-26

  - &android-cache
    directories:
      - ~/.cache/yarn
      - ~/.gradle/caches/modules-2
      - ~/.gradle/wrapper

  - &ios-cache
    directories:
      - ~/.rncache
      - ~/Library/Caches/Yarn
      - ~/Library/Caches/CocoaPods

  - &init-new-project
    |
      nvm install 12
      nvm use 12
      nvm alias default 12
      yarn global add react-native-cli
      react-native init App --version="0.59.9"
      cd App
      yarn add react-native-svg

jobs:
  include:
    - stage: "test js"
      language: node_js
      node_js: node
      cache: yarn
      script:
        - node node_modules/react-native/local-cli/cli.js bundle --entry-file index.js --bundle-output bundle.js
        - ls -lh bundle.*

    - stage: "build test for example"
      language: android
      licenses:
        - 'android-sdk-preview-license-.+'
        - 'android-sdk-license-.+'
        - 'google-gdk-license-.+'
      jdk: oraclejdk8
      android: *android
      before_cache:
        - rm ~/.gradle/caches/modules-2/modules-2.lock
      cache: *android-cache
      before_install:
        # Install SDK license so Android Gradle plugin can install deps.
        - mkdir "$ANDROID_HOME/licenses" || true
        - echo "d56f5187479451eabf01fb78af6dfcb131a6481e" >> "$ANDROID_HOME/licenses/android-sdk-license"
        - echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" >> "$ANDROID_HOME/licenses/android-sdk-license"
        # Install the rest of tools (e.g., avdmanager)
        - echo 'count=0' > /home/travis/.android/repositories.cfg # Avoid harmless sdkmanager warning
        - echo y | sdkmanager "platform-tools" >/dev/null
        - echo y | sdkmanager "tools" >/dev/null # A second time per Travis docs, gets latest versions
        - echo y | sdkmanager "build-tools;28.0.3" >/dev/null # Implicit gradle dependency - gradle drives changes
        - echo y | sdkmanager "platforms;android-26" >/dev/null # We need the API of the emulator we will run
        - echo y | sdkmanager "platforms;android-28" >/dev/null # We need the API of the current compileSdkVersion from gradle.properties
        - echo y | sdkmanager "emulator" >/dev/null
        - echo y | sdkmanager "extras;android;m2repository" >/dev/null
        # Install the system image
        - sdkmanager "system-images;android-26;google_apis;x86_64"
        # This is cause of react-native: react native's Gradle tasks partially run even without running Detox'
        # compile-from-source flavour :-/
        # TODO find a way to get rid of this step
        - echo y | sdkmanager ndk-bundle >/dev/null
        - export ANDROID_NDK="$ANDROID_HOME/ndk-bundle"
        # Need to update the tools so we'd have a decent 'emulator' bin and the newer 'avdmanager' (instead of the 'android' bin)
        - echo yes | sdkmanager --update
        - sdkmanager --list
        # Install latest version of emulator
        # https://aur.archlinux.org/packages/android-emulator/
        # https://aur.archlinux.org/packages/android-emulator-canary/
        #- rm -rf $ANDROID_HOME/emulator
        #- cd $ANDROID_HOME
        - sudo apt-get install -y libunwind8 libc++1
        #- wget -q https://dl.google.com/android/repository/emulator-linux-5889189.zip
        #- unzip -q emulator-linux-5889189.zip
        #- cd -
        # Create emulator
        - echo no | avdmanager create avd --force --name Nexus_5X_API_26 --abi x86_64 --device "Nexus 5X" -k "system-images;android-26;default;x86_64" -c 200M
        - echo "skin.name=1080x1920" >> ~/.android/avd/Nexus_5X_API_26.avd/config.ini
        - echo "vm.heapSize=512" >> ~/.android/avd/Nexus_5X_API_26.avd/config.ini
        - echo "hw.ramSize=1024" >> ~/.android/avd/Nexus_5X_API_26.avd/config.ini
        # Start emulator
        - /usr/local/android-sdk/tools/emulator @Nexus_5X_API_26 -verbose -no-window -no-snapshot -no-boot-anim -no-accel -noaudio -camera-back none -camera-front none  -gpu host &
        - ./ci.android-waitforemulator.sh
        - adb shell input keyevent 82 &
      install:
        - nvm install 10
        - curl -o- -L https://yarnpkg.com/install.sh | bash
        - export PATH=$HOME/.yarn/bin:$PATH
        - yarn global add react-native-cli
        - yarn global add detox-cli
        - yarn
      script:
        - detox build --configuration android.emu.release
        - adb reverse tcp:8099 tcp:8099
        - adb push android/app/build/outputs/apk/release/app-release.apk /data/local/tmp
        - travis_wait adb shell pm install /data/local/tmp/app-release.apk
        - adb shell rm /data/local/tmp/app-release.apk
        - adb push android/app/build/outputs/apk/androidTest/release/app-release-androidTest.apk /data/local/tmp
        - adb shell pm install /data/local/tmp/app-release-androidTest.apk
        - adb shell rm /data/local/tmp/app-release-androidTest.apk
        - adb shell dumpsys window windows | grep -E 'Not Responding' && adb shell input keyevent 61  && adb shell input keyevent 61  && adb shell input keyevent 66 || true
        - adb shell dumpsys window windows | grep -E 'has stopped' && adb shell input keyevent 61 && adb shell input keyevent 66 || true
        - echo '590000' > timeout.json
        - detox test --configuration android.emu.release --loglevel trace --reuse --take-screenshots all

    - stage: "build test for example"
      language: objective-c
      os: osx
      osx_image: xcode10.2
      env:
        - REACT_NATIVE_VERSION=0.60.6
          PATH=$PATH:~/Library/Python/2.7/bin
      cache: *ios-cache
      script:
        - nvm install 10
        - nvm use 10
        - nvm alias default 10
        - brew tap wix/brew
        - brew install yarn
        - brew install applesimutils
        - yarn global add react-native-cli
        - yarn global add detox-cli
        - yarn
        - cd ios
        - gem install cocoapods
        - pod install
        - cd ..
        - detox build --configuration ios.sim.release
        - xcrun simctl shutdown all
        - detox test --configuration ios.sim.release --cleanup --take-screenshots all

    - stage: "build test for new project"
      language: android
      jdk: oraclejdk8
      android: *android
      before_cache:
        - rm ~/.gradle/caches/modules-2/modules-2.lock
      cache: *android-cache
      script:
        - *init-new-project
        - yarn run react-native link
        - cd android
        - ./gradlew build
        - ls -lh app/build/outputs/apk

    - stage: "build test for new project"
      language: objective-c
      osx_image: xcode10.2
      env:
        - REACT_NATIVE_VERSION=0.59.9
          PATH=$PATH:~/Library/Python/2.7/bin
      cache: *ios-cache
      script:
        - brew install yarn
        - *init-new-project
        - yarn run react-native link
        - cd ios
        - xcodebuild -project App.xcodeproj -configuration Debug -scheme App -sdk iphonesimulator -quiet

    - stage: "build test for new project with pods"
      language: objective-c
      osx_image: xcode10.2
      env:
        - REACT_NATIVE_VERSION=0.59.9
          PATH=$PATH:~/Library/Python/2.7/bin
      cache: *ios-cache
      script:
        - brew install yarn
        - *init-new-project
        - cd ios
        - |
          cat << EOF > Podfile
            platform :ios, '9.0'
            target 'App' do
              # Your 'node_modules' directory is probably in the root of your project,
              # but if not, adjust the `:path` accordingly
              pod 'React', :path => '../node_modules/react-native', :subspecs => [
                'Core',
                'CxxBridge', # Include this for RN >= 0.47
                'DevSupport', # Include this to enable In-App Devmenu if RN >= 0.43
                'RCTText',
                'RCTImage',
                'RCTNetwork',
                'RCTWebSocket', # Needed for debugging
                'RCTAnimation', # Needed for FlatList and animations running on native UI thread
                # Add any other subspecs you want to use in your project
              ]
              # Explicitly include Yoga if you are using RN >= 0.42.0
              pod 'yoga', :path => '../node_modules/react-native/ReactCommon/yoga'

              # Third party deps podspec link
              pod 'DoubleConversion', :podspec => '../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec'
              pod 'glog', :podspec => '../node_modules/react-native/third-party-podspecs/glog.podspec'
              pod 'Folly', :podspec => '../node_modules/react-native/third-party-podspecs/Folly.podspec'

              pod 'RNSVG', :path => '../node_modules/react-native-svg'
            end
          EOF
        - pod install --repo-update
        - xcodebuild -workspace App.xcworkspace -scheme App -sdk iphonesimulator -quiet

    - stage: "build test for auto-linking"
      language: objective-c
      os: osx
      osx_image: xcode11.2
      cache: *ios-cache
      script:
        - nvm install 12
        - nvm use 12
        - nvm alias default 12
        - brew install yarn
        - yarn global add react-native-cli
        - react-native init App
        - cd App
        - yarn add react-native-svg
        - cd ios
        - pod install --repo-update
        - xcodebuild -workspace App.xcworkspace -scheme App -sdk iphonesimulator -quiet

    - stage: "build test for auto-linking"
      language: android
      jdk: oraclejdk8
      android: *android
      before_cache:
        - rm ~/.gradle/caches/modules-2/modules-2.lock
      cache: *android-cache
      script:
        - nvm install 12
        - nvm use 12
        - nvm alias default 12
        - curl -o- -L https://yarnpkg.com/install.sh | bash
        - export PATH=$HOME/.yarn/bin:$PATH
        - yarn global add react-native-cli
        - react-native init App
        - cd App
        - yarn add react-native-svg
        - cd android
        - ./gradlew build
        - ls -lh app/build/outputs/apk

stages:
  - "test js"
  - "build test for example"
  - "build test for new project"
  - "build test for new project with pods"
  - "build test for auto-linking"

